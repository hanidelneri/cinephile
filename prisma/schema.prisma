// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cinema {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  address   String      @default("")
  url       String
  show_time show_time[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @default(now()) @updatedAt
}

model movie {
  id          Int            @id @default(autoincrement())
  title       String         @unique
  description String
  duration    Int
  images      String[]
  links       String[]
  movie_genre movie_genre[]
  cast        movie_people[]
  createdAt   DateTime       @default(now())
  updatedAT   DateTime       @default(now()) @updatedAt
  // director movie_people @relation(name: "director")
  show_time   show_time[]
}

model show_time {
  id         Int        @id @default(autoincrement())
  movie      movie      @relation(fields: [movieId], references: [id])
  movieId    Int
  datetime   DateTime
  screenType screenType @default(twoD)
  versions   version[]
  cinema     cinema     @relation(fields: [cinemaId], references: [id])
  cinemaId   Int
  createdAt  DateTime   @default(now())
  updatedAT  DateTime   @updatedAt
}

model movie_genre {
  id        Int      @id @default(autoincrement())
  movie     movie    @relation(fields: [movieId], references: [id])
  movieId   Int
  genre     genre    @relation(fields: [genreId], references: [id])
  genreId   Int
  createdAt DateTime @default(now())
  updatedAT DateTime @updatedAt
}

model movie_people {
  id        Int      @id @default(autoincrement())
  movie     movie    @relation(fields: [movieId], references: [id])
  people    people   @relation(fields: [peopleId], references: [id])
  movieId   Int
  peopleId  Int
  role      role
  createdAt DateTime @default(now())
  updatedAT DateTime @updatedAt
}

model genre {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  createdAt   DateTime      @default(now())
  updatedAT   DateTime      @updatedAt
  movie_genre movie_genre[]
}

model people {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  movie_people movie_people[]
  createdAt    DateTime       @default(now())
  updatedAT    DateTime       @updatedAt
}

enum role {
  cast
  director
}

enum screenType {
  twoD
  threeD
}

enum version {
  df
  omu
  omeu
  ov
}
